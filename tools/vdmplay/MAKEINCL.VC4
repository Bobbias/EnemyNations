#======================================================================
#
#		M A K E I N C L
#
#	Include files for the Rogue Wave Tools.h++ package, using
#	Microsoft C 7 or Visual C++ under DOS / Windows / Windows NT.
#
#	$Id: makeincl.msc,v 6.3 1994/07/12 20:09:47 vriezen Exp $
#
#	Note that ONLY the Microsoft-supplied "nmake" command 
#	should be used.
#
#  (c) Copyright 1989, 1990, 1991, 1992, 1993, 1994 Rogue Wave Software, Inc.
#  ALL RIGHTS RESERVED
#
#  The software and information contained herein are proprietary to, and
#  comprise valuable trade secrets of, Rogue Wave Software, Inc., which
#  intends to preserve as trade secrets such software and information.
#  This software is furnished pursuant to a written license agreement and
#  may be used, copied, transmitted, and stored only in accordance with
#  the terms of such license and with the inclusion of the above copyright
#  notice.  This software and information or any other copies thereof may
#  not be provided or otherwise made available to any other person.
#
#  Notwithstanding any other lease or license that may pertain to, or
#  accompany the delivery of, this computer software and information, the
#  rights of the Government regarding its use, reproduction and disclosure
#  are as set forth in Section 52.227-19 of the FARS Computer
#  Software-Restricted Rights clause.
#  
#  Use, duplication, or disclosure by the Government is subject to
#  restrictions as set forth in subparagraph (c)(1)(ii) of the Rights in
#  Technical Data and Computer Software clause at DFARS 52.227-7013.
#  
#  This computer software and information is distributed with "restricted
#  rights."  Use, duplication or disclosure is subject to restrictions as
#  set forth in NASA FAR SUP 18-52.227-79 (April 1985) "Commercial
#  Computer Software-Restricted Rights (April 1985)."  If the Clause at
#  18-52.227-74 "Rights in Data General" is specified in the contract,
#  then the "Alternate III" clause applies.
#
#
#
#
#	Rogue Wave Software, Inc.
#	P.O. Box 2328
#	Corvallis, OR 97339
#	Voice: 503-754-3010  FAX: 503-757-6650
#
#=============================================================================
# Usage:
#
#  make -f makefile.msc ENVIRON=<environ> MODEL=<model> BINDING=<binding> \
#                       THREAD=<threads>  BMODE=<build mode> \
#                       CCOPTS=<compiler options>
#
#  Where: (* = default)
#      <environ> may be...	for...
#      ----------------------	------------------------------------------
#     *DOS			good-ol' DOS
#      WIN16		        Microsoft Windows under DOS, or NT's WOW
#      WIN32			the Windows NT operating system
#      OS2 (not supported)	the OS/2 2.x operating system
#
#
#      <model> may be...	for...
#      ----------------------	------------------------------------------
#     *L (WIN, WIN16 default)	large    (mult data segs, mult code segs)
#     *F (WIN32, OS2 default)	flat	 (Non-segmented 32-bit system)
#      S			small    (1 data seg, 1 code seg)
#      M			medium   (1 data seg, mult code segs)
#      C			compact  (mult data segs, 1 code seg)
# 
# 
#      <binding> may be...	for...
#      ----------------------	------------------------------------------
#     *STATIC		        a statically linked version of the library   
#      DLL			a dynamically linked version of the library
#      USERDLL                  a staticaclly linked version to be linked into
#                               a user dll   
#
#
#      <thread> may be...	for...
#      ----------------------	------------------------------------------
#     *SINGLE		        use with single-threaded applications
#      MULTI			an "MT-safe" version of the library
#
#
#      <build mode> may be...	for...
#      ----------------------	------------------------------------------
#      DEBUG			a debug version of the library
#     *RELEASE			a release version of the library
#
#
#      <compiler options> may be...
#      -------------------------------------------------------------------
#      any additional compiler options you wish for the build process.	
#      Surround with double quotes to include more than one option (see 
#      examples).  Use this option to customize the build process with optim-
#      zation options, source level debugging, 80x86 code generation, etc.
#      Note that if you exercise this option, your flags will replace any
#      given below as defaults.  Note also that if you use this option, you
#      are responsible for making sure that the flags you give make sense
#      with the rest of the options.
#
#     *Defaults:
#	  DOS		-O1	# optimize for size
#	  WIN16         -O1 -2  # as above, plus generate 286 prot. mode code
#         WIN32	                # none  
#         OS2	                # none  
#
###################################################################
#
#  Examples: 
#
#  (Assume building under DOS):
#      nmake -f makefile.msc ENVIRON=WIN16 
#	// build or use a large-model static library for linking 
#       //   MS Windows applications
#
#      nmake -f makefile.msc BMODE=DEBUG MODEL=M "CCOPTS=-Zi -Od"
#       // build or use a medium-model debug version of the library for DOS;
#       //   compile with source level debugging and optimizations disabled
#
#  (Assume building under Windows NT):
#      nmake -f makefile.msc THREAD=MULTI ENVIRON=WIN32
#       // build or use a flat 32-bit version of the library, suitable for
#       //   use with multi-threaded applications, under Windows NT
#
###################################################################
#
#	set default values:

!ifndef ENVIRON
!  if "$(OS)" == "Windows_NT"
ENVIRON = WIN32
!  else
ENVIRON = DOS
!  endif
!endif

!ifndef MODEL
!  if "$(ENVIRON)" == "DOS" || "$(ENVIRON)" == "WIN16"
MODEL = L
!  else
MODEL = F
!  endif
!endif

!ifndef BINDING
BINDING = STATIC
!endif

!ifndef THREAD
!  if "$(BINDING)" == "STATIC"
THREAD = SINGLE
!  else
THREAD = MULTI
!  endif
!endif

!ifndef BMODE
BMODE = RELEASE
!endif

#	Optimize flag:
OPTIMIZE=	-Os

!ifndef CCOPTS
!  if "$(ENVIRON)" == "DOS"
CCOPTS =
!  endif
!  if "$(ENVIRON)" == "WIN16"
CCOPTS = -G2 -Zp
!  endif
!endif


###################################################################
#
# Flag legal but unsupported options:
#

!if "$(ENVIRON)" == "OS2"
!  error OS2 not supported for Microsoft compilers
!endif

!if "$(ENVIRON)" == "WIN16" && "$(BINDING)" == "DLL"
!  error Building DLL not supported for 16-bit Windows
!endif

###################################################################
#
# Flag illegal options:
#

!if   "$(ENVIRON)" != "DOS"   && "$(ENVIRON)" != "WIN16"\
  &&  "$(ENVIRON)" != "WIN32" && "$(ENVIRON)" != "OS2"
!  error Illegal value for ENVIRON option
!endif

!if  "$(MODEL)" != "S" && "$(MODEL)" != "C"\
  && "$(MODEL)" != "M" && "$(MODEL)" != "L"\
  && "$(MODEL)" != "F"
!  error Illegal value for MODEL option (choose S, M, C, L, or F)
!endif

!if "$(BINDING)" != "DLL" && "$(BINDING)" != "STATIC"  && "$(BINDING)" != "USERDLL" 
!  error Illegal value for BINDING option (choose STATIC or DLL or USERDLL)
!endif

!if "$(THREAD)" != "SINGLE" && "$(THREAD)" != "MULTI"
!  error Illegal value for THREAD option (choose SINGLE or MULTI)
!endif

!if "$(BMODE)" != "RELEASE" && "$(BMODE)" != "DEBUG"
!  error Illegal value for BMODE option (choose RELEASE or DEBUG)
!endif


###################################################################
#
# Flag illegal combinations:
#

!if "$(ENVIRON)" == "DOS" && "$(BINDING)" == "DLL"
!  error Illegal options: Cannot combine DOS and DLL
!endif

!if  "$(ENVIRON)" == "DOS"  && "$(THREAD)" == "MULTI"
!  error Illegal options: THREAD must be SINGLE for DOS and WIN16
!endif

!if "$(ENVIRON)" == "WIN16"  && "$(THREAD)" == "MULTI"
!  error Illegal options: THREAD must be SINGLE for DOS and WIN16
!endif

!if ("$(ENVIRON)" == "DOS" || "$(ENVIRON)" == "WIN16") && "$(MODEL)" == "F"
!  error Illegal options: MODEL cannot be F (flat) for DOS and WIN16
!endif

!if ("$(ENVIRON)" == "OS2" || "$(ENVIRON)" == "WIN32") && "$(MODEL)" != "F"
!  error Illegal options: MODEL must be F (flat) for OS2 and WIN32
!endif

!if "$(ENVIRON)" == "WIN32" && "$(BINDING)" == "DLL" && "$(THREAD)" == "SINGLE"
!  error The 32-bit DLL can only be built as a multithread-safe DLL 
!endif

###################################################################
#
# Set the tool names:

# Uncomment the following if using the original Win32 SDK compiler (cl386):
#!if "$(ENVIRON)" == "WIN32"
#SUFFIX1 = 386
#SUFFIX2 = 32
#!endif


CPP	  = cl$(SUFFIX1)
LIBRARIAN = lib$(SUFFIX2)
LINKER	  = link$(SUFFIX2)

###################################################################
#
# Set the various flags:

!if "$(MODEL)" == "F"
MEMOPT = 
!else
MEMOPT = -A$(MODEL)
!endif

!if "$(ENVIRON)" == "WIN16"
!  if "$(BINDING)" == "STATIC"
WINNAME = w
ENVOPTS = $(ENVOPTS) -GA
!  else
!    error Building DLL not supported for 16-bit Windows
!  endif

!else 
!  if "$(ENVIRON)" == "WIN32"
!    if "$(BMODE)" == "DEBUG"
ENVDEBUG=d
!    endif
!    if "$(BINDING)" == "DLL"
WINNAME = d
ENVOPTS = $(ENVOPTS) -MD$(xENVOPTS)
!      ifdef BUILD_RWTOOLS
ENVOPTS = $(ENVOPTS) -LD
!      endif
!    endif
!    if "$(BINDING)" == "USERDLL"
WINNAME = ud
ENVOPTS = $(ENVOPTS) -MD$(ENVDEBUG) -D_WINDLL -D_DLL_
!    endif

!    if "$(THREAD)" == "MULTI" && "$(BINDING)" != "DLL" && "$(BINDING)" != "USERDLL"
THRNAME = mt
ENVOPTS = $(ENVOPTS) -MT$(ENVDEBUG)
!    endif
!  endif
!endif

!if "$(BMODE)" == "DEBUG"
DBGNAME=	g
DBGOPT=		-DRWDEBUG=1 /Fd"$(LIBROOT)".PDB
LINKER=         $(LINKER) /DEBUG
!endif



###################################################################
#
# Set any relevant defines (DEFOPTS= -Dxxx ...)

!if "$(ENVIRON)" == "WIN32"
DEFOPTS= -D_X86_=1 -DWIN32 -DNOMINMAX
!endif

!if "$(BINDING)" == "DLL"
DEFOPTS = $(DEFOPTS) -D_RWTOOLSDLL
!  ifdef BUILD_RWTOOLS 
DEFOPTS = $(DEFOPTS) -D_RWBUILDDLL -D__DLL__
!  endif
!endif

###################################################################
#
# Locate and name the library:

#		Where the library should be built:

LIBDIR=		..\lib

#		Rogue Wave header file include path:
RWINCL=		..

#		Rogue Wave header file directory:
RWDIR=		..\rw

#               Base name of the library:
#	        Note max length is 8 since MEMOPT and THRNAME are mut excl.
LIBNAME=	m$(VERSION)tl$(MEMOPT:-A=)$(WINNAME)$(DBGNAME)$(THRNAME)

#		Root names (excluding suffix) of the library:
LIBROOT=        $(LIBDIR)\$(LIBNAME)
#		Full name (including suffix) of the library:
LIBFULL=	$(LIBDIR)\$(LIBNAME).lib

#Compile flags:
CPPFLAGS= -I$(RWINCL) $(CCOPTS) $(OPTIMIZE) $(DBGOPT) $(MEMOPT) $(ENVOPTS) $(DEFOPTS)
